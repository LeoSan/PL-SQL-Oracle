CREATE OR REPLACE PACKAGE BODY OPERACION.PKG_ELP_AUTORIZACION_BORRADO AS

    PROCEDURE SP_GET_FLUJO_AUTORIZACION(st_cursor out SYS_REFCURSOR, PID_PROC_BORRADO_IN in NUMBER) IS
     LNUM_AUTORIZACIONES NUMBER;
     BEGIN
        SELECT COUNT(1) into LNUM_AUTORIZACIONES
        FROM OPERACION.ELP_AUTORIZACION_PROC AP
        WHERE ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

        IF LNUM_AUTORIZACIONES =0 THEN
            SP_GENERA_FLUJO_AUTORIZA(PID_PROC_BORRADO_IN);
        END IF;

        OPEN st_cursor FOR

            SELECT ROWNUM AS ORDEN, USUARIO AS USUARIO, CORREO AS CORREO, AUTORIZACION_FINAL  AS esFinal,
                   ( SELECT CLNAME FROM RCVRY.COLLID WHERE CLCOLLID = USUARIO ) NMUSUARIO
                  ,ACE.CLAVE||': '||RBE.DESCRIPCION ||' - Juicio ('||J.NUMERO||')' AS  ASUNTO, APM.TASK_PM TASKPM
            FROM OPERACION.ELP_AUTORIZACION_PROC APM
            JOIN OPERACION.ELP_PROC_ACC_ETAPA PAC ON ( PAC.ID_PROC_ACC_ETAPA = APM.ID_PROC_ACC_ETAPA )
            JOIN OPERACION.CAT_ACCION_ETAPA ACE ON ( ACE.ID_ACCION_ETAPA = PAC.ID_ACCION_ETAPA ) 
            JOIN OPERACION.CAT_RAZON_BORRADO_ETAPA RBE ON (PAC.ID_RAZON_BORRADO_ETAPA=RBE.ID_RAZON_BORRADO_ETAPA)
            JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
            JOIN OPERACION.ELP_JUICIO J ON (EJL.ID_JUICIO=J.ID_JUICIO)
            WHERE APM.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
            ORDER BY APM.ID_AUTORIZACION_PROC;

   END SP_GET_FLUJO_AUTORIZACION;

   PROCEDURE SP_GENERA_FLUJO_AUTORIZA(PID_PROC_BORRADO_IN in NUMBER) IS
     LTIPO_ACCION_ETAPA OPERACION.CAT_ACCION_ETAPA.CLAVE%TYPE;
     LID_ETAPA_JUICIO NUMBER;
     LID_ETAPA_LEGAL NUMBER;
     LID_JUICIO NUMBER;
     LACCION_ETAPA OPERACION.ELP_ACCION_ETAPA_JUICIO%ROWTYPE;

     LASIGNACION_LITIGANTE NUMBER;

     LETAPAS_PRINCIPALES NUMBER;

     LES_DESPACHOS_EXTERNOS NUMBER:=0;

     LUSUARIO OPERACION.ELP_AUTORIZACION_PROC.USUARIO%TYPE;
     LCORREO OPERACION.ELP_AUTORIZACION_PROC.CORREO%TYPE;

     LES_FINAL NUMBER:=0;

     CURSOR CUR_SUPERVISOR(PID_JUICIO NUMBER) IS
        SELECT CL.CLCOLLID, CL.CLMAIL FROM RCVRY.CASE CA
        JOIN RCVRY.COLLID CL ON CA.CESUPVLWYR=CL.CLCOLLID
        JOIN OPERACION.ELP_JUICIO J ON (CA.CECASENO=J.NUMERO)
        WHERE J.ID_JUICIO=PID_JUICIO;

     CURSOR CUR_COORDINADOR(PID_JUICIO NUMBER) IS
        SELECT CLS.CLCOLLID,  CLS.CLMAIL   FROM RCVRY.CASE CA
        JOIN RCVRY.COLLID CL ON CA.CESUPVLWYR=CL.CLCOLLID
        JOIN RCVRY.COLLID CLS ON CLS.CLCOLLID=CL.CLSUPV
        JOIN OPERACION.ELP_JUICIO J ON (CA.CECASENO=J.NUMERO)
        WHERE J.ID_JUICIO=PID_JUICIO;

     CURSOR CUR_COORD_EXTERNOS IS
        SELECT CL.CLCOLLID, CL.CLMAIL FROM OPERACION.ELP_CONFIGURACION C
        JOIN (
            SELECT MAX(ID_CONFIGURACION_EL) AS ID_CONFIGURACION_EL
            FROM OPERACION.ELP_CONFIGURACION
        ) CM ON(C.ID_CONFIGURACION_EL=CM.ID_CONFIGURACION_EL)
        JOIN RCVRY.COLLID CL ON (C.USUARIO_QUASAR_CE=CL.CLCOLLID);

    CURSOR CUR_COORD_LITIGANTES IS
        SELECT CL.CLCOLLID, CL.CLMAIL FROM OPERACION.ELP_CONFIGURACION C
        JOIN (
            SELECT MAX(ID_CONFIGURACION_EL) AS ID_CONFIGURACION_EL
            FROM OPERACION.ELP_CONFIGURACION
        ) CM ON(C.ID_CONFIGURACION_EL=CM.ID_CONFIGURACION_EL)
        JOIN RCVRY.COLLID CL ON (C.USUARIO_QUASAR_CL=CL.CLCOLLID);

     BEGIN
        SELECT AC.CLAVE, PAC.ID_ETAPA_JUICIO, EJ.ID_JUICIO  INTO LTIPO_ACCION_ETAPA, LID_ETAPA_JUICIO, LID_JUICIO
        FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
        JOIN OPERACION.CAT_ACCION_ETAPA AC ON (PAC.ID_ACCION_ETAPA=AC.ID_ACCION_ETAPA)
        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (PAC.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
        WHERE PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

        IF LTIPO_ACCION_ETAPA='RETROCESO_ETAPAS' THEN
            SELECT AEJ.* INTO LACCION_ETAPA FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
            JOIN OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ ON (PAC.ID_PROC_ACC_ETAPA=AEJ.ID_PROC_ACC_ETAPA)
            JOIN OPERACION.CAT_ACCION_ETAPA AC ON (AEJ.ID_ACCION_ETAPA=AC.ID_ACCION_ETAPA)
            WHERE PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
            AND AC.CLAVE='RETROCESO_ETAPAS';

            SELECT COUNT(1) INTO LASIGNACION_LITIGANTE
                FROM RCVRY.CASE CA
                JOIN RCVRY.COLLID CL  ON (CA.CERESPLWYR=CL.CLCOLLID)
                WHERE CECASENO IN (
                    SELECT NUMERO FROM OPERACION.ELP_JUICIO
                    WHERE ID_JUICIO=LID_JUICIO
                )
                AND CL.CLTITLE='ABOGADO LITIGANTE';

            SELECT COUNT(1) INTO LETAPAS_PRINCIPALES
            FROM OPERACION.ELP_ETAPA_JUICIO EJ
            JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
            WHERE EJ.ACTIVO=1 AND EJ.ID_JUICIO=LID_JUICIO
            AND EJ.ID_RETROCESO_ETAPAS IS NULL
            AND EJ.ID_RESULTADO_ETAPA IN(
                SELECT ID_RES_ETAPA_CALCULO FROM OPERACION.ELP_CONFIGURACION
                WHERE ID_CONFIGURACION_EL IN(
                    SELECT MAX(ID_CONFIGURACION_EL) FROM OPERACION.ELP_CONFIGURACION
                )
            )
            AND EL.ESPECIAL=0
            AND EL.ID_ETAPA_LEGAL IN (
                SELECT ID_ETAPA_LEGAL FROM OPERACION.CAT_ETAPA_LEGAL
                WHERE PRINCIPAL=1
            )
            AND EL.NUMERO>=(
                SELECT EL.NUMERO FROM OPERACION.ELP_ETAPA_JUICIO EJ
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                WHERE EJ.ID_ETAPA_JUICIO=LACCION_ETAPA.ID_ETAPA_JUICIO
            );
            IF LETAPAS_PRINCIPALES>0 THEN

                IF LASIGNACION_LITIGANTE = 0 THEN
                    LES_DESPACHOS_EXTERNOS:=1;
                END IF;

            END IF;
        END IF;

        OPEN CUR_SUPERVISOR(LID_JUICIO);
        FETCH CUR_SUPERVISOR INTO LUSUARIO, LCORREO;
        IF CUR_SUPERVISOR%FOUND  THEN
            INSERT INTO  OPERACION.ELP_AUTORIZACION_PROC (ID_AUTORIZACION_PROC, USUARIO, CORREO, ID_PROC_ACC_ETAPA, AUTORIZACION_FINAL)
            VALUES(OPERACION.SEQ_ELP_AUTORIZACION_PROC.NEXTVAL, LUSUARIO, LCORREO, PID_PROC_BORRADO_IN, LES_FINAL);
        ELSE
                raise_application_error(-20002 , 'No se cuenta configurado el Supervisor del juicio');

        END IF;
        CLOSE CUR_SUPERVISOR;



        IF LASIGNACION_LITIGANTE = 0 THEN
            OPEN CUR_COORDINADOR(LID_JUICIO);
            FETCH CUR_COORDINADOR INTO LUSUARIO, LCORREO;
            IF CUR_COORDINADOR%FOUND  THEN
                IF LES_DESPACHOS_EXTERNOS=0 THEN
                    LES_FINAL:=1;
                END IF;
                INSERT INTO  OPERACION.ELP_AUTORIZACION_PROC (ID_AUTORIZACION_PROC, USUARIO, CORREO, ID_PROC_ACC_ETAPA, AUTORIZACION_FINAL)
                VALUES(OPERACION.SEQ_ELP_AUTORIZACION_PROC.NEXTVAL, LUSUARIO, LCORREO, PID_PROC_BORRADO_IN, LES_FINAL);
            ELSE
                raise_application_error(-20002 , 'No se cuenta configurado el Coordinador del juicio');

            END IF;

            CLOSE CUR_COORDINADOR;
        ELSE
            IF LES_DESPACHOS_EXTERNOS=0 THEN
                LES_FINAL:=1;
            END IF;
            OPEN CUR_COORD_LITIGANTES;
            FETCH CUR_COORD_LITIGANTES INTO LUSUARIO, LCORREO;
            IF CUR_COORD_LITIGANTES%FOUND  THEN
                INSERT INTO  OPERACION.ELP_AUTORIZACION_PROC (ID_AUTORIZACION_PROC, USUARIO, CORREO, ID_PROC_ACC_ETAPA, AUTORIZACION_FINAL)
                VALUES(OPERACION.SEQ_ELP_AUTORIZACION_PROC.NEXTVAL, LUSUARIO, LCORREO, PID_PROC_BORRADO_IN, LES_FINAL);
            ELSE
                raise_application_error(-20002 , 'No se cuenta configurado el Coordinador de Abogados Litigantes en el sistema');
            END IF;
            CLOSE CUR_COORD_LITIGANTES;

        END IF;

        IF LES_DESPACHOS_EXTERNOS=1 THEN
            OPEN CUR_COORD_EXTERNOS;
            FETCH CUR_COORD_EXTERNOS INTO LUSUARIO, LCORREO;
            IF CUR_COORD_EXTERNOS%FOUND  THEN
                INSERT INTO  OPERACION.ELP_AUTORIZACION_PROC (ID_AUTORIZACION_PROC, USUARIO, CORREO, ID_PROC_ACC_ETAPA, AUTORIZACION_FINAL)
                VALUES(OPERACION.SEQ_ELP_AUTORIZACION_PROC.NEXTVAL, LUSUARIO, LCORREO, PID_PROC_BORRADO_IN, 1);
            ELSE
                raise_application_error(-20002 , 'No se cuenta configurado el Coordinador de abogados externos');

            END IF;
            CLOSE CUR_COORD_EXTERNOS;
        END IF;

   END SP_GENERA_FLUJO_AUTORIZA;


   PROCEDURE SP_GET_INFO_ETAPA_JUICIO(st_cursor out SYS_REFCURSOR, PID_PROC_BORRADO_IN in NUMBER) IS
   BEGIN
        OPEN st_cursor FOR
            SELECT J.NUMERO AS numeroJuicio,
            C.NUMERO AS numeroCuenta ,
            CAR.CLAVE AS claveCartera,
            CAR.DESCRIPCION AS nombreCartera,
            CA.ceextlwyr as abogadoExterno,
            'gbdiaz@pendulum.com.mx' /*COALESCE(CSOL.CLMAIL, CLI.CLMAIL, CLE.CLMAIL)*/ AS CORREO,
            CLE.CLNAME AS nombreExterno,
            CA.CERESPLWYR AS abogadoInterno,
            CA.CENAME AS DEMANDADO,
            CA.CEDOSSIERID AS EXPEDIENTE,
            JU.DESCRIPCION AS JUZGADO,
            CLI.CLNAME AS nombreInterno,
            RBE.DESCRIPCION AS RAZON,
            PAC.JUSTIFICACION AS JUSTIFICACION,
            ACE.CLAVE||': '||RBE.DESCRIPCION ||'(juicio)'||J.NUMERO AS ENCABEZADO,
            ACE.CLAVE||': '||RBE.DESCRIPCION ||'(juicio)'||J.NUMERO AS  ASUNTO,
            PAC.SOLICITANTE AS  nombreSolicitante,
            APM.TASK_PM AS taskPm
            FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
            JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
            JOIN OPERACION.CAT_RAZON_BORRADO_ETAPA RBE ON (PAC.ID_RAZON_BORRADO_ETAPA=RBE.ID_RAZON_BORRADO_ETAPA)
            JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
            JOIN OPERACION.ELP_JUICIO J ON (EJL.ID_JUICIO=J.ID_JUICIO)
            JOIN OPERACION.ELP_CREDITO_JUICIO CJ ON(J.ID_JUICIO=CJ.ID_JUICIO)
            JOIN OPERACION.ELP_CREDITO C ON(C.ID_CREDITO=CJ.ID_CREDITO)
            LEFT JOIN OPERACION.CAT_CARTERA CAR ON(CAR.ID_CARTERA=C.ID_CARTERA)
            LEFT JOIN OPERACION.CAT_JUZGADO JU ON (J.ID_JUZGADO=JU.ID_JUZGADO)
            LEFT JOIN (
                SELECT MAX(ID_AUTORIZACION_PROC) ID_AUTORIZACION_PROC, ID_PROC_ACC_ETAPA  FROM OPERACION.ELP_AUTORIZACION_PROC AP
                WHERE TASK_PM IS NOT NULL
                GROUP BY ID_PROC_ACC_ETAPA
            ) MT on(PAC.ID_PROC_ACC_ETAPA=MT.ID_PROC_ACC_ETAPA)
            LEFT JOIN OPERACION.ELP_AUTORIZACION_PROC APM ON(MT.ID_AUTORIZACION_PROC=APM.ID_AUTORIZACION_PROC)
            LEFT JOIN RCVRY.CASE CA ON (J.NUMERO=CA.CECASENO)
            LEFT JOIN RCVRY.COLLID CLI ON (CA.CERESPLWYR  =  CLI.CLCOLLID)
            LEFT JOIN RCVRY.COLLID CLE ON (CA.ceextlwyr  =  CLE.CLCOLLID)
            LEFT JOIN RCVRY.COLLID CSOL ON (PAC.SOLICITANTE  =  CSOL.CLCOLLID)
            WHERE PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

   END SP_GET_INFO_ETAPA_JUICIO;

   PROCEDURE SP_GET_ETAPAS_ANTES(st_cursor out SYS_REFCURSOR, PID_PROC_BORRADO_IN in NUMBER) IS
   BEGIN
        OPEN st_cursor FOR
            select
            (
                CASE WHEN ACE.CLAVE = 'ELIMINAR_ETAPA' AND PAC.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO THEN
                    'ELIMINAR_ETAPA'
                WHEN ACE.CLAVE = 'RETROCESO_ETAPAS' AND PAC.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO THEN
                    'REEMPLAZAR_ETAPA'
                WHEN ACE.CLAVE = 'REEMPLAZAR_ETAPA' THEN
                    OPERACION.PKG_ELP_UTILERIAS_BORRADO.FC_ACCION_REEMPLAZO(EJ.ID_ETAPA_JUICIO, PAC.ID_PROC_ACC_ETAPA)
                WHEN ACE.CLAVE='ELIMINAR_RANGO_ETAPAS' AND OPERACION.PKG_ELP_UTILERIAS_BORRADO.FC_EN_PROCESO_BORRADO(EJ.ID_ETAPA_JUICIO)>0 THEN
                    case when EJ.ID_ETAPA_JUICIO=PAC.ID_ETAPA_JUICIO then
                        'ABRE_ETAPA_LEGAL'
                    else
                        'ELIMINAR_ETAPA'
                    end
                ELSE
                    NULL
                END
            ) AS ACCION,
            EJ.ID_ETAPA_JUICIO AS idEtapaJuicio,
            EL.NUMERO AS numeroEtapa,
            EL.NOMBRE AS nombreEtapa,
            EJ.FECHA_INICIO AS fechaInicio,
            EJ.FECHA_TERMINO AS fechaTermino,
            RE.DESCRIPCION AS resultadoVerificacion,
            RR.DESCRIPCION AS razonResultado
            from OPERACION.ELP_PROC_ACC_ETAPA PAC
            JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
            JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
            JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
            JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
            LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
            LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
            where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
            AND EJ.ACTIVO=1
            ORDER BY EJ.ORDEN DESC;
   END SP_GET_ETAPAS_ANTES;

   PROCEDURE SP_GET_ETAPAS_DESPUES(st_cursor out SYS_REFCURSOR, PID_PROC_BORRADO_IN in NUMBER) IS

    LCLAVE_ACCION OPERACION.CAT_ACCION_ETAPA.CLAVE%TYPE;
    LID_ETAPA_JUICIO NUMBER;

    FECHA_TMP DATE;

    CURSOR CUR_ETAPA_PREVIA(PID_ETAPA_JUICIO NUMBER) IS
            SELECT FECHA_TERMINO FROM  OPERACION.ELP_ETAPA_JUICIO
            WHERE ID_ETAPA_JUICIO IN (
                SELECT OPERACION.PKG_ELP_UTILERIAS_ETAPA.FC_GET_ETAPA_ANT(PID_ETAPA_JUICIO) FROM DUAL
            );

   BEGIN

        SELECT CLAVE, ID_ETAPA_JUICIO, FECHA_RESULTADO INTO LCLAVE_ACCION, LID_ETAPA_JUICIO, FECHA_TMP
        FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
        WHERE PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

        IF LCLAVE_ACCION='ELIMINAR_RANGO_ETAPAS' THEN
            OPEN st_cursor FOR
                SELECT TODO.ACCION,
                TODO.ID_ETAPA_JUICIO AS idEtapaJuicio,
                EL.NUMERO AS numeroEtapa,
                EL.NOMBRE AS nombreEtapa,
                TODO.FECHA_INICIO AS fechaInicio,
                TODO.FECHA_TERMINO AS fechaTermino,
                RE.DESCRIPCION AS resultadoVerificacion,
                RR.DESCRIPCION AS razonREsultado
                 FROM (
                    select '' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO ,
                    EJ.ORDEN AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.ELP_PROC_ACC_ETAPA PACI
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PACI.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (PACI.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='ELIMINAR_RANGO_ETAPAS'
                        AND PACI.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ID_ETAPA_JUICIO<>BR.ID_ETAPA_JUICIO AND EJ.ORDEN<BR.ORDEN)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                    UNION
                    SELECT 'ABRE_ETAPA_LEGAL' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    NULL AS FECHA_TERMINO ,
                    EJ.ORDEN AS ORDEN
                    FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (PAC.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                    WHERE   PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                ) TODO
                JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (TODO.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
                LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
                ORDER BY TODO.ORDEN DESC;
        ELSIF LCLAVE_ACCION='ELIMINAR_ETAPA' THEN

            OPEN CUR_ETAPA_PREVIA(LID_ETAPA_JUICIO);
            FETCH CUR_ETAPA_PREVIA INTO FECHA_TMP;
            IF CUR_ETAPA_PREVIA%NOTFOUND  THEN
                FECHA_TMP:=NULL;
            END IF;
            CLOSE CUR_ETAPA_PREVIA;


            OPEN st_cursor FOR
                SELECT TODO.ACCION,
                TODO.ID_ETAPA_JUICIO AS idEtapaJuicio,
                EL.NUMERO AS numeroEtapa,
                EL.NOMBRE AS nombreEtapa,
                TODO.FECHA_INICIO AS fechaInicio,
                TODO.FECHA_TERMINO AS fechaTermino,
                RE.DESCRIPCION AS resultadoVerificacion,
                RR.DESCRIPCION AS razonResultado
                 FROM (
                     select
                     (
                        CASE WHEN EJ.ORDEN = BR.ORDEN+1 THEN
                            'REEMPLAZA_FECHA_INICIO'
                        ELSE
                            ''
                        END
                    ) AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    (
                        CASE WHEN EJ.ORDEN = BR.ORDEN+1 THEN
                            NVL(FECHA_TMP, EJ.FECHA_INICIO)
                        ELSE
                            EJ.FECHA_INICIO
                        END
                    ) AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO,
                    EJ.ORDEN AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='ELIMINAR_ETAPA'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ID_ETAPA_JUICIO<>BR.ID_ETAPA_JUICIO /*AND EJ.ORDEN<BR.ORDEN */)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                ) TODO
                JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (TODO.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
                LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
                ORDER BY TODO.ORDEN DESC;
        ELSIF LCLAVE_ACCION='RETROCESO_ETAPAS' THEN
            OPEN st_cursor FOR
                SELECT TODO.ACCION,
                TODO.ID_ETAPA_JUICIO AS idEtapaJuicio,
                EL.NUMERO AS numeroEtapa,
                EL.NOMBRE AS nombreEtapa,
                TODO.FECHA_INICIO AS fechaInicio,
                TODO.FECHA_TERMINO AS fechaTermino,
                RE.DESCRIPCION AS resultadoVerificacion,
                RR.DESCRIPCION AS razonResultado
                 FROM (
                    SELECT '' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO ,
                    EJ.ORDEN AS ORDEN
                    FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJA ON (PAC.ID_ETAPA_JUICIO=EJA.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJA.ID_JUICIO=EJ.ID_JUICIO)
                    WHERE EJ.ACTIVO=1
                    AND EJ.ID_ETAPA_JUICIO<>EJA.ID_ETAPA_JUICIO
                    AND PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    UNION
                    SELECT 'INSERTA_ETAPA_RETROCESO' AS ACCION,
                    O.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJA.FECHA_INICIO AS FECHA_INICIO,
                    NULL AS FECHA_TERMINO ,
                    EJA.ORDEN AS ORDEN
                    FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJA ON (PAC.ID_ETAPA_JUICIO=EJA.ID_ETAPA_JUICIO)
                    JOIN (
                        SELECT EJ.* FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE  ACE.CLAVE='RETROCESO_ETAPAS'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) O ON (O.ID_ETAPA_JUICIO IS NOT NULL)
                    WHERE PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                ) TODO
                JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (TODO.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
                LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
                ORDER BY TODO.ORDEN DESC;
        ELSIF LCLAVE_ACCION='REEMPLAZAR_ETAPA' THEN
            OPEN st_cursor FOR
                SELECT TODO.ACCION,
                TODO.ID_ETAPA_JUICIO AS idEtapaJuicio,
                EL.NUMERO AS numeroEtapa,
                EL.NOMBRE AS nombreEtapa,
                TODO.FECHA_INICIO AS fechaInicio,
                TODO.FECHA_TERMINO AS fechaTermino,
                RE.DESCRIPCION AS resultadoVerificacion,
                RR.DESCRIPCION AS razonResultado
                 FROM (
                    select '' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO ,
                    EJ.ORDEN AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='ELIMINAR_ETAPA'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ID_ETAPA_JUICIO<>BR.ID_ETAPA_JUICIO AND EJ.ORDEN<BR.ORDEN)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                    UNION
                    SELECT 'INSERTA_ETAPA_INTERMEDIA' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO ,
                    O.ORDEN AS ORDEN
                    FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='ELIMINAR_ETAPA'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) O ON (EJ.ID_ETAPA_JUICIO IS NOT NULL)
                    WHERE  ACE.CLAVE='INSERTA_ETAPA_INTERMEDIA'
                    AND  AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    UNION
                    select '' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    (
                        CASE WHEN EJ.ORDEN = BR.ORDEN+1 THEN
                            I.FECHA_TERMINO
                        ELSE
                            EJ.FECHA_INICIO
                        END
                    ) AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO ,
                    EJ.ORDEN AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='ELIMINAR_ETAPA'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ID_ETAPA_JUICIO<>BR.ID_ETAPA_JUICIO AND EJ.ORDEN>BR.ORDEN)
                    JOIN (
                        SELECT EJ.FECHA_TERMINO
                        FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='INSERTA_ETAPA_INTERMEDIA'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) I ON (EJ.ID_ETAPA_JUICIO IS NOT NULL)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                ) TODO
                JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (TODO.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
                LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
                ORDER BY TODO.ORDEN DESC;
        ELSIF LCLAVE_ACCION='INSERTA_ETAPA_INTERMEDIA' THEN
             OPEN st_cursor FOR
                SELECT TODO.ACCION,
                TODO.ID_ETAPA_JUICIO AS idEtapaJuicio,
                EL.NUMERO AS numeroEtapa,
                EL.NOMBRE AS nombreEtapa,
                TODO.FECHA_INICIO AS fechaInicio,
                TODO.FECHA_TERMINO AS fechaTermino,
                RE.DESCRIPCION AS resultadoVerificacion,
                RR.DESCRIPCION AS razonResultado
                 FROM (
                    select
                    '' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO,
                     EJ.ORDEN AS ORDEN
                    FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
                    join OPERACION.ELP_ETAPA_JUICIO EJAC ON (PAC.ID_ETAPA_JUICIO=EJAC.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJ.ID_JUICIO=EJAC.ID_JUICIO AND EJ.ORDEN<=EJAC.ORDEN)
                    WHERE EJ.ACTIVO=1
                    AND PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    UNION
                    SELECT 'INSERTA_ETAPA_INTERMEDIA' AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJAC.FECHA_TERMINO AS FECHA_INICIO,
                    EJ.FECHA_TERMINO AS FECHA_TERMINO ,
                    O.ORDEN+1 AS ORDEN
                    FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
                    join OPERACION.ELP_ETAPA_JUICIO EJAC ON (PAC.ID_ETAPA_JUICIO=EJAC.ID_ETAPA_JUICIO)
                    join OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ ON (Pac.ID_PROC_ACC_ETAPA=AEJ.ID_PROC_ACC_ETAPA)
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                    JOIN (
                       select ej.ID_ETAPA_JUICIO, ej.orden from operacion.elp_proc_acc_etapa  AEJ
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        where ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) O ON (EJ.ID_ETAPA_JUICIO IS NOT NULL)
                    WHERE  ACE.CLAVE='INSERTA_ETAPA_INTERMEDIA'
                    AND  PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    UNION
                    select (
                        case when EJ.ORDEN=br.orden+1 and i.FECHA_TERMINO<>EJ.FECHA_INICIO then
                            'REEMPLAZA_FECHA_INICIO'
                        else
                            ''
                        end
                    ) AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    (
                        case when EJ.ORDEN=br.orden+1 then
                            i.FECHA_TERMINO
                        else
                            EJ.FECHA_INICIO
                        end
                    )AS FECHA_INICIO,
                    EJ.FECHA_TERMINO as FECHA_TERMINO,
                    EJ.ORDEN+2 AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.elp_proc_acc_etapa AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='INSERTA_ETAPA_INTERMEDIA'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ORDEN>BR.ORDEN)
                    JOIN (
                        SELECT EJ.FECHA_TERMINO FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='INSERTA_ETAPA_INTERMEDIA'
                        and AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) I ON (EJ.ID_ETAPA_JUICIO IS NOT NULL)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                ) TODO
                JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (TODO.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
                LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
                ORDER BY TODO.ORDEN DESC;
        ELSIF LCLAVE_ACCION='REEMPLAZA_FECHA_FIN' THEN
            OPEN st_cursor FOR
                SELECT TODO.ACCION,
                TODO.ID_ETAPA_JUICIO AS idEtapaJuicio,
                EL.NUMERO AS numeroEtapa,
                EL.NOMBRE AS nombreEtapa,
                TODO.FECHA_INICIO AS fechaInicio,
                TODO.FECHA_TERMINO AS fechaTermino,
                RE.DESCRIPCION AS resultadoVerificacion,
                RR.DESCRIPCION AS razonResultado
                 FROM (
                     select (
                        case when EJ.ORDEN=br.orden and i.FECHA_TERMINO<>EJ.FECHA_TERMINO then
                            'REEMPLAZA_FECHA_FIN'
                        else
                            ''
                        end
                    ) AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    EJ.FECHA_INICIO AS FECHA_INICIO,
                    (
                        case when EJ.ORDEN=br.orden then
                            i.FECHA_TERMINO
                        else
                            EJ.FECHA_TERMINO
                        end
                    ) as FECHA_TERMINO,
                    EJ.ORDEN AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.elp_proc_acc_etapa AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='REEMPLAZA_FECHA_FIN'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ORDEN<=BR.ORDEN)
                    JOIN (
                        SELECT EJ.FECHA_TERMINO
                        FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='REEMPLAZA_FECHA_FIN'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) I ON (EJ.ID_ETAPA_JUICIO IS NOT NULL)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                    union
                    select (
                        case when EJ.ORDEN=br.orden+1 and i.FECHA_TERMINO<>EJ.FECHA_INICIO then
                            'REEMPLAZA_FECHA_INICIO'
                        else
                            ''
                        end
                    ) AS ACCION,
                    EJ.ID_ETAPA_JUICIO AS ID_ETAPA_JUICIO,
                    (
                        case when EJ.ORDEN=br.orden+1 then
                            i.FECHA_TERMINO
                        else
                            EJ.FECHA_INICIO
                        end
                    )AS FECHA_INICIO,
                    EJ.FECHA_TERMINO as FECHA_TERMINO,
                    EJ.ORDEN+2 AS ORDEN
                    from OPERACION.ELP_PROC_ACC_ETAPA PAC
                    JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (PAC.ID_ETAPA_JUICIO=EJL.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (EJL.ID_JUICIO=EJ.ID_JUICIO)
                    JOIN (
                        SELECT EJ.ID_ETAPA_JUICIO, EJ.ORDEN FROM OPERACION.elp_proc_acc_etapa AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='REEMPLAZA_FECHA_FIN'
                        AND AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) BR ON (EJ.ORDEN>BR.ORDEN)
                    JOIN (
                        SELECT EJ.FECHA_TERMINO FROM OPERACION.ELP_ACCION_ETAPA_JUICIO AEJ
                        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (AEJ.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
                        JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (AEJ.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                        WHERE ACE.CLAVE='REEMPLAZA_FECHA_FIN'
                        and AEJ.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    ) I ON (EJ.ID_ETAPA_JUICIO IS NOT NULL)
                    where PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
                    AND EJ.ACTIVO=1
                ) TODO
                JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (TODO.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                LEFT JOIN OPERACION.CAT_RESULTADO_ETAPA RE ON (EJ.ID_RESULTADO_ETAPA=RE.ID_RESULTADO_ETAPA)
                LEFT JOIN OPERACION.CAT_RAZON_RESULTADO RR ON (EJ.ID_RAZON_RESULTADO=RR.ID_RAZON_RESULTADO)
                ORDER BY TODO.ORDEN DESC;
        ELSE
            OPEN st_cursor FOR
                SELECT * FROM DUAL where 1=2;
        END IF;



   END SP_GET_ETAPAS_DESPUES;

   /*
   * INSERTA ETAPA TEMPORAL PARA AUTORIZACION
   */
   PROCEDURE SP_GUARDAR_ETAPA_TMP(PID_JUICIO_IN NUMBER,
                                   PID_ETAPA_LEGAL_IN NUMBER,
                                   PFECHA_INICIO_IN DATE,
                                   PFECHA_TERMINO_IN DATE,
                                   PFECHA_ESPERADA_IN DATE,
                                   PRESPONSABLE_IN VARCHAR2,
                                   PID_PROC_ACCION_IN NUMBER,
                                   PID_ACCION_IN NUMBER) IS

     LID_ETAPA_JUICIO_NEW  OPERACION.ELP_ETAPA_JUICIO.ID_ETAPA_JUICIO%TYPE;

     BEGIN
        SELECT OPERACION.SEQ_ELP_ETAPA_JUICIO.NEXTVAL INTO LID_ETAPA_JUICIO_NEW FROM DUAL;

        INSERT INTO OPERACION.ELP_ETAPA_JUICIO(ID_ETAPA_JUICIO, ID_JUICIO, ID_ETAPA_LEGAL, FECHA_INICIO, FECHA_TERMINO, FECHA_ESPERADA, FECHA_CAPTURA, FECHA_CIERRE, RESPONSABLE_CAPTURA, ACTIVO, EN_PROCESO)
        VALUES(LID_ETAPA_JUICIO_NEW, PID_JUICIO_IN, PID_ETAPA_LEGAL_IN, PFECHA_INICIO_IN, PFECHA_TERMINO_IN, PFECHA_ESPERADA_IN, SYSDATE, SYSDATE,  PRESPONSABLE_IN, 0, 1);

        INSERT INTO OPERACION.ELP_ACCION_ETAPA_JUICIO(ID_ACCION_ETAPA_JUICIO, ID_PROC_ACC_ETAPA, ID_ETAPA_JUICIO, FECHA_TERMINO, ID_ACCION_ETAPA)
        VALUES( OPERACION.SEQ_ELP_ACCION_ETAPA_JUICIO.NEXTVAL, PID_PROC_ACCION_IN, LID_ETAPA_JUICIO_NEW, PFECHA_TERMINO_IN, PID_ACCION_IN);

   END SP_GUARDAR_ETAPA_TMP;

   PROCEDURE SP_ACEPTAR_SOLICITUD(PID_PROC_BORRADO_IN in NUMBER, PRESPONSABLE VARCHAR2, PCOMENTARIO VARCHAR2) IS
      LCLAVE_ACCION OPERACION.CAT_ACCION_ETAPA.CLAVE%TYPE;
      LID_ETAPA_JUICIO NUMBER;

      LESTATUS CHAR(1);
      LMENSAJE VARCHAR2(4000);

      LFECHA_TERMINO DATE;

      LETAPA_JUICIO_TMP OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO_ELIMINAR OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO_ACTUALIZAR OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO_INSERTAR OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO_FECHA OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO_POST OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LETAPA_JUICIO_ANT OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

--        LETAPA_QUASAR RCVRY.CASESTAG%ROWTYPE;

        LID_RETROCESO_ETAPAS NUMBER;

--        CURSOR CUR_ETAPA_QUASAR(PID_ETAPA_JUICIO OPERACION.ELP_ETAPA_JUICIO.ID_ETAPA_JUICIO%TYPE) IS
--        select  * from RCVRY.CASESTAG
--        where rowid in (
--            SELECT CS.rowid FROM RCVRY.CASESTAG CS JOIN (
--                SELECT EL.NUMERO,
--                OPERACION.PKG_UTILERIAS_TEXTO.TRANS_NOMBRE_ETAPA(EL.NOMBRE) AS   NOMBRE,
--                J.NUMERO AS JUICIO
--                FROM OPERACION.ELP_ETAPA_JUICIO EJ
--                JOIN OPERACION.ELP_JUICIO J ON (EJ.ID_JUICIO=J.ID_JUICIO)
--                JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
--                WHERE EJ.ID_ETAPA_JUICIO=PID_ETAPA_JUICIO
--            ) ELP ON (CS.CSCASENO=ELP.JUICIO
--                AND ELP.NUMERO =CS.CSSTGID
--                AND ELP.NOMBRE= OPERACION.PKG_UTILERIAS_TEXTO.TRANS_NOMBRE_ETAPA(CS.CSDESC)
--            )
--        )
--        ORDER BY CSSTDT DESC, CSENDDT DESC
--        FOR UPDATE;

         CURSOR CUR_RANGO_BORRAR(PID_PROC_BORRADO_IN in NUMBER) IS
            SELECT * FROM OPERACION.ELP_ETAPA_JUICIO
            WHERE ID_ETAPA_JUICIO IN(
                select   EJL.ID_ETAPA_JUICIO from OPERACION.ELP_PROC_ACC_ETAPA PBE
                    JOIN (
                        SELECT ID_ACCION_ETAPA FROM OPERACION.CAT_ACCION_ETAPA
                        WHERE CLAVE='ELIMINAR_RANGO_ETAPAS'
                    ) ELR ON (PBE.ID_ACCION_ETAPA=ELR.ID_ACCION_ETAPA)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJ ON (PBE.ID_ETAPA_JUICIO=EJ.ID_ETAPA_JUICIO)
                    JOIN OPERACION.ELP_ETAPA_JUICIO EJL ON (EJ.ID_JUICIO=EJL.ID_JUICIO)
                    WHERE EJL.ACTIVO=1
                    AND EJL.ORDEN>EJ.ORDEN
                    and pbe.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN
            ) FOR UPDATE;

       CURSOR CUR_ETAPA_JUICIO_POS(PID_ETAPA_JUICIO NUMBER) IS
        SELECT * FROM  OPERACION.ELP_ETAPA_JUICIO
        WHERE ID_ETAPA_JUICIO IN (
            SELECT OPERACION.PKG_ELP_UTILERIAS_ETAPA.FC_GET_ETAPA_POST(PID_ETAPA_JUICIO) FROM DUAL
        );

        CURSOR CUR_ETAPA_JUICIO_ANT(PID_ETAPA_JUICIO NUMBER) IS
        SELECT * FROM  OPERACION.ELP_ETAPA_JUICIO
        WHERE ID_ETAPA_JUICIO IN (
            SELECT OPERACION.PKG_ELP_UTILERIAS_ETAPA.FC_GET_ETAPA_ANT(PID_ETAPA_JUICIO) FROM DUAL
        );

        LID_ETAPA_JUICIO_AJUSTE OPERACION.ELP_ETAPA_JUICIO%ROWTYPE;

        LCONSECUTIVO NUMBER;

        CURSOR CUR_ETAPAS_JUICIOS(PID_JUCIO NUMBER) IS
            SELECT EJ.* FROM OPERACION.ELP_ETAPA_JUICIO EJ
            JOIN OPERACION.CAT_ETAPA_LEGAL EL ON(EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
            where ej.ID_JUICIO=PID_JUCIO  AND EJ.ACTIVO=1
            order by ORDEN ASC, EJ.ID_ETAPA_JUICIO ASC, FECHA_INICIO ASC;

            fecha_fin date;

            LFECHA_CALCULADA DATE;

     BEGIN
        LESTATUS:='A';
        LMENSAJE:='';

        SELECT CLAVE, ID_ETAPA_JUICIO, FECHA_RESULTADO INTO LCLAVE_ACCION, LID_ETAPA_JUICIO, FECHA_FIN
        FROM OPERACION.ELP_PROC_ACC_ETAPA PAC
        JOIN OPERACION.CAT_ACCION_ETAPA ACE ON (PAC.ID_ACCION_ETAPA=ACE.ID_ACCION_ETAPA)
        WHERE PAC.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

        if FECHA_FIN is not null then
            raise_application_error(-20000 , 'La solicitud ya ha sido procesada');
        end if;

        IF LCLAVE_ACCION='ELIMINAR_RANGO_ETAPAS' THEN
            begin
                for LETAPA_JUICIO IN  CUR_RANGO_BORRAR(PID_PROC_BORRADO_IN) LOOP
                    UPDATE OPERACION.ELP_ETAPA_JUICIO
                    SET ACTIVO=0
                    WHERE CURRENT OF CUR_RANGO_BORRAR;

                    OPERACION.PKG_ELP_HISTORIAL_ETAPAS.SP_ACCION_ETAPA_JUICIO(LETAPA_JUICIO.ID_ETAPA_JUICIO,'BORRADO',SYSDATE,PRESPONSABLE);

                END LOOP;

                UPDATE OPERACION.ELP_ETAPA_JUICIO
                    SET FECHA_TERMINO=NULL
                    WHERE ID_ETAPA_JUICIO IN(
                        LID_ETAPA_JUICIO
                );
            EXCEPTION
                WHEN OTHERS THEN
                    LESTATUS:='E';
                    LMENSAJE:='Ha ocurrido un error : '||SQLERRM;
            end;
        ELSIF LCLAVE_ACCION='RETROCESO_ETAPAS' THEN
                SELECT ej.* into LETAPA_JUICIO_ELIMINAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where cae.clave='ELIMINAR_ETAPA'
                and  pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

                if LETAPA_JUICIO_ELIMINAR.activo=0 then
                    LESTATUS:='E';
                    LMENSAJE:='SKIP: La etapa a eliminar ya ha sido eliminada previamente ';
                end if;

                SELECT ej.* INTO LETAPA_JUICIO_INSERTAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where  cae.clave='RETROCESO_ETAPAS'
                and   pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;


                OPEN CUR_ETAPA_JUICIO_ANT(LETAPA_JUICIO_ELIMINAR.ID_ETAPA_JUICIO);
                FETCH CUR_ETAPA_JUICIO_ANT INTO LETAPA_JUICIO_ANT;
                IF CUR_ETAPA_JUICIO_ANT%FOUND  THEN
                     IF  TRUNC(LETAPA_JUICIO_INSERTAR.FECHA_INICIO)<>TRUNC(LETAPA_JUICIO_ANT.FECHA_TERMINO) THEN
                         LETAPA_JUICIO_INSERTAR.FECHA_INICIO:=LETAPA_JUICIO_ANT.FECHA_TERMINO;
                    END IF;
                END IF;
                CLOSE CUR_ETAPA_JUICIO_ANT;

                if LESTATUS<>'E' then

                    --SELECT OPERACION.SEQ_ELP_RETROCESO_ETAPAS.nextval INTO LID_RETROCESO_ETAPAS FROM DUAL;

                    /*
                    * Desactivar
                    */
                    OPERACION.PKG_ELP_ACCIONES_ETAPA.SP_DESACTIVAR_ETAPA_JUICIO(LETAPA_JUICIO_ELIMINAR.ID_ETAPA_JUICIO, PRESPONSABLE);

                    --LFECHA_CALCULADA:=OPERACION.PKG_ELP_CALCULOS.FC_GET_FECHA_INICIO( LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO ,   1);

                    /*
                    * Borra etapas en quasar
                    */

--                    UPDATE RCVRY.CASESTAG
--                    SET CSSTDT=NULL, CSENDDT=NULL
--                    where rowid in(
--                        SELECT  CS.ROWID
--                        FROM OPERACION.ELP_ETAPA_JUICIO EJ
--                        JOIN (
--                            SELECT min(EJ.ORDEN) AS ORDEN, EJ.ID_JUICIO  FROM OPERACION.ELP_ETAPA_JUICIO EJ
--                            JOIN OPERACION.CAT_ETAPA_LEGAL EL  ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
--                            JOIN OPERACION.CAT_ETAPA_LEGAL ELA  ON (ELA.ID_ETAPA_LEGAL=LETAPA_JUICIO_INSERTAR.ID_ETAPA_LEGAL)
--                            WHERE EJ.ID_JUICIO=LETAPA_JUICIO_INSERTAR.ID_JUICIO
--                            AND EL.NUMERO>=ELA.NUMERO
--                            AND EL.ESPECIAL=0
--                            AND EJ.ACTIVO=1
--                            GROUP BY EJ.ID_JUICIO
--                        )EM ON (EJ.ID_JUICIO=EM.ID_JUICIO AND EJ.ORDEN>=EM.ORDEN)
--                        JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
--                        JOIN OPERACION.ELP_JUICIO J ON (EJ.ID_JUICIO=J.ID_JUICIO)
--                        JOIN  RCVRY.CASESTAG CS ON (J.NUMERO=CS.CSCASENO  AND EL.NUMERO=CS.CSSTGID)
--                        WHERE EJ.ACTIVO=1 --AND EJ.FECHA_TERMINO IS NOT NULL
--                        AND EL.ESPECIAL=0
--                        AND ID_RETROCESO_ETAPAS IS  NULL
--                    );

                    /*
                    BORRAR VERIFIACIONES
                    */
                    UPDATE RCVRY.HIST_ETAPA_VALIDAD
                    SET ETAPA_BORRADA='BORRADA'
                    WHERE (FOLIO, CONSECUTIVO) IN(
                        SELECT  CS.NUMERO_JUICIO, CS.NUMERO_ETAPA
--                        SELECT  CS.CSCASENO, CS.CSSTGID//SE COMENTO PARAV QUITAR CASESTAG
                        FROM OPERACION.ELP_ETAPA_JUICIO EJ
                        JOIN (
                            SELECT min(EJ.ORDEN) AS ORDEN, EJ.ID_JUICIO  FROM OPERACION.ELP_ETAPA_JUICIO EJ
                            JOIN OPERACION.CAT_ETAPA_LEGAL EL  ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                            JOIN OPERACION.CAT_ETAPA_LEGAL ELA  ON (ELA.ID_ETAPA_LEGAL=LETAPA_JUICIO_INSERTAR.ID_ETAPA_LEGAL)
                            WHERE EJ.ID_JUICIO=LETAPA_JUICIO_INSERTAR.ID_JUICIO
                            AND EL.NUMERO>=ELA.NUMERO
                            AND EL.ESPECIAL=0
                            AND EJ.ACTIVO=1
                            GROUP BY EJ.ID_JUICIO
                        )EM ON (EJ.ID_JUICIO=EM.ID_JUICIO AND EJ.ORDEN>=EM.ORDEN)
                        JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                        JOIN OPERACION.ELP_JUICIO J ON (EJ.ID_JUICIO=J.ID_JUICIO)
                        JOIN OPERACION.VW_ELP_ETAPAS_LEGALES CS ON (J.NUMERO=CS.NUMERO_JUICIO  AND EL.NUMERO=CS.NUMERO_ETAPA)
--                        JOIN  RCVRY.CASESTAG CS ON (J.NUMERO=CS.CSCASENO  AND EL.NUMERO=CS.CSSTGID)//SE COMENTO PARAV QUITAR CASESTAG
                        WHERE EJ.ACTIVO=1  --AND EJ.FECHA_TERMINO IS NOT NULL
                        AND EL.ESPECIAL=0
                        AND ID_RETROCESO_ETAPAS IS  NULL
                    )
                    AND ETAPA_BORRADA  IS NULL;


                    UPDATE OPERACION.ELP_ETAPA_JUICIO
                    SET ID_RETROCESO_ETAPAS =PID_PROC_BORRADO_IN
                    WHERE ID_ETAPA_JUICIO IN (
                       SELECT EJ.id_etapa_juicio
                       FROM OPERACION.ELP_ETAPA_JUICIO EJ
                        JOIN (
                            SELECT min(EJ.ORDEN) AS ORDEN, EJ.ID_JUICIO  FROM OPERACION.ELP_ETAPA_JUICIO EJ
                            JOIN OPERACION.CAT_ETAPA_LEGAL EL  ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                            JOIN OPERACION.CAT_ETAPA_LEGAL ELA  ON (ELA.ID_ETAPA_LEGAL=LETAPA_JUICIO_INSERTAR.ID_ETAPA_LEGAL)
                            WHERE EJ.ID_JUICIO=LETAPA_JUICIO_INSERTAR.ID_JUICIO
                            AND EL.NUMERO>=ELA.NUMERO
                            AND EL.ESPECIAL=0
                            AND EJ.ACTIVO=1
                            GROUP BY EJ.ID_JUICIO
                        )EM ON (EJ.ID_JUICIO=EM.ID_JUICIO AND EJ.ORDEN>=EM.ORDEN)
                        JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                        WHERE EJ.ACTIVO=1 --AND EJ.FECHA_TERMINO IS NOT NULL
                        AND EL.ESPECIAL=0
                        AND ID_RETROCESO_ETAPAS IS  NULL
                    );

                    /*
                    UPDATE OPERACION.ELP_ETAPA_JUICIO
                    SET RETROCESO_ETAPA_ESP=1
                    WHERE ID_ETAPA_JUICIO IN (
                       SELECT EJ.id_etapa_juicio
                       FROM OPERACION.ELP_ETAPA_JUICIO EJ
                        JOIN (
                            SELECT min(EJ.ORDEN) AS ORDEN, EJ.ID_JUICIO  FROM OPERACION.ELP_ETAPA_JUICIO EJ
                            JOIN OPERACION.CAT_ETAPA_LEGAL EL  ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                            JOIN OPERACION.CAT_ETAPA_LEGAL ELA  ON (ELA.ID_ETAPA_LEGAL=LETAPA_JUICIO_INSERTAR.ID_ETAPA_LEGAL)
                            WHERE EJ.ID_JUICIO=LETAPA_JUICIO_INSERTAR.ID_JUICIO
                            AND EL.NUMERO>=ELA.NUMERO
                            AND EL.ESPECIAL=0
                            AND EJ.ACTIVO=1
                            GROUP BY EJ.ID_JUICIO
                        )EM ON (EJ.ID_JUICIO=EM.ID_JUICIO AND EJ.ORDEN>=EM.ORDEN)
                        JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                        WHERE EJ.ACTIVO=1 --AND EJ.FECHA_TERMINO IS NOT NULL
                        AND EL.ESPECIAL=1
                        AND ID_RETROCESO_ETAPAS IS  NULL
                    );
                    */

                     SELECT MAX(EJ.FECHA_TERMINO) INTO LFECHA_TERMINO
                       FROM OPERACION.ELP_ETAPA_JUICIO EJ
                        JOIN (
                            SELECT min(EJ.ORDEN) AS ORDEN, EJ.ID_JUICIO  FROM OPERACION.ELP_ETAPA_JUICIO EJ
                            JOIN OPERACION.CAT_ETAPA_LEGAL EL  ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
                            JOIN OPERACION.CAT_ETAPA_LEGAL ELA  ON (ELA.ID_ETAPA_LEGAL=  LETAPA_JUICIO_INSERTAR.ID_ETAPA_LEGAL  )
                            WHERE EJ.ID_JUICIO = LETAPA_JUICIO_INSERTAR.ID_JUICIO
                            AND EL.NUMERO<=ELA.NUMERO
                            AND EJ.ACTIVO=1
                             AND EJ.FECHA_TERMINO IS NOT NULL
                            AND ID_RETROCESO_ETAPAS IS  NULL
                            GROUP BY EJ.ID_JUICIO
                        )EM ON (EJ.ID_JUICIO=EM.ID_JUICIO AND EJ.ORDEN>=EM.ORDEN)
                        WHERE EJ.ACTIVO=1
                        AND EJ.FECHA_TERMINO IS NOT NULL
                        AND ID_RETROCESO_ETAPAS IS  NULL ;

                    IF LFECHA_TERMINO IS NULL  THEN
                        SELECT COALESCE(J.FECHA_ACTIVACION, C.FECHA_INICIO, CA.FECHA_INICIO, SYSDATE) INTO LFECHA_TERMINO
                        FROM OPERACION.ELP_JUICIO J
                        LEFT JOIN OPERACION.ELP_CREDITO_JUICIO CJ ON (J.ID_JUICIO=CJ.ID_JUICIO)
                        LEFT JOIN OPERACION.ELP_CREDITO C ON (CJ.ID_CREDITO=C.ID_CREDITO)
                        LEFT JOIN OPERACION.CAT_CARTERA CA ON (C.ID_CARTERA=CA.ID_CARTERA)
                        WHERE J.ID_JUICIO= LETAPA_JUICIO_INSERTAR.ID_JUICIO;
                    END IF;


                    /*
                    * Activar la etapa
                    */
                    UPDATE operacion.elp_etapa_juicio
                    SET ACTIVO=1,
                    ES_RETROCESO=1,
                    FECHA_INICIO=LFECHA_TERMINO,
                    ORDEN=LETAPA_JUICIO_ELIMINAR.ORDEN
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO;

--                    OPEN CUR_ETAPA_QUASAR(LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO);
--                    FETCH CUR_ETAPA_QUASAR INTO  LETAPA_QUASAR;
--                    IF CUR_ETAPA_QUASAR%FOUND  THEN
--                        UPDATE RCVRY.CASESTAG
--                        SET CSSTDT=LFECHA_TERMINO,
--                        CSENDDT=null
--                        WHERE CURRENT OF CUR_ETAPA_QUASAR;
--                    ELSE
--                        INSERT INTO RCVRY.CASESTAG(CSDESC, CSCASENO, CSTYPE, CSSTGID, CSSTDT)
--                        SELECT SUBSTR(EL.NOMBRE, 1, 40), J.NUMERO, SUBSTR(JT.CLAVE, 1, 20) ,EL.NUMERO, LFECHA_TERMINO
--                        FROM OPERACION.ELP_ETAPA_JUICIO EJ
--                        JOIN OPERACION.ELP_JUICIO J ON (EJ.ID_JUICIO=J.ID_JUICIO)
--                        JOIN OPERACION.CAT_ETAPA_LEGAL EL ON (EJ.ID_ETAPA_LEGAL=EL.ID_ETAPA_LEGAL)
--                        JOIN OPERACION.CAT_TIPO_JUICIO JT ON (J.ID_TIPO_JUICIO=JT.ID_TIPO_JUICIO)
--                        WHERE EJ.ID_ETAPA_JUICIO=LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO;

--                    END IF;
--                    CLOSE CUR_ETAPA_QUASAR;

                    OPERACION.PKG_ELP_HISTORIAL_ETAPAS.SP_ACCION_ETAPA(LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO,  'RETROCESO',SYSDATE,PRESPONSABLE);

                    OPERACION.PKG_ELP_GENERACION_CALCULOS.SP_ACTUALIZA_METRICAS( LETAPA_JUICIO_INSERTAR.ID_JUICIO );

                end if;

        ELSIF LCLAVE_ACCION='ELIMINAR_ETAPA' THEN
            begin
                SELECT ej.* into LETAPA_JUICIO_ELIMINAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where cae.clave='ELIMINAR_ETAPA'
                and  pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

                if LETAPA_JUICIO_ELIMINAR.activo=0 then
                    LESTATUS:='E';
                    LMENSAJE:='La etapa a eliminar ya ha sido eliminada previamente ';
                else
                    OPERACION.PKG_ELP_ACCIONES_ETAPA.SP_BORRAR_ETAPA_JUICIO(LID_ETAPA_JUICIO, PRESPONSABLE);
                end if;


            EXCEPTION
                WHEN OTHERS THEN
                    LESTATUS:='E';
                    LMENSAJE:='Ha ocurrido un error : '||SQLERRM;
            end;
        ELSIF LCLAVE_ACCION='REEMPLAZAR_ETAPA' THEN
            begin
                SELECT ej.* into LETAPA_JUICIO_ELIMINAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where cae.clave='ELIMINAR_ETAPA'
                and  pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

                if LETAPA_JUICIO_ELIMINAR.activo=0 then
                    LESTATUS:='E';
                    LMENSAJE:='La etapa a eliminar ya ha sido eliminada previamente ';
                end if;

                SELECT ej.* INTO LETAPA_JUICIO_INSERTAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where  cae.clave='INSERTA_ETAPA_INTERMEDIA'
                and   pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

                OPEN CUR_ETAPA_JUICIO_POS(LETAPA_JUICIO_ELIMINAR.ID_ETAPA_JUICIO);
                FETCH CUR_ETAPA_JUICIO_POS INTO LETAPA_JUICIO_POST;
                IF CUR_ETAPA_JUICIO_POS%FOUND  THEN
                    IF LETAPA_JUICIO_INSERTAR.FECHA_TERMINO IS NOT NULL AND  LETAPA_JUICIO_INSERTAR.FECHA_TERMINO>LETAPA_JUICIO_POST.FECHA_TERMINO THEN
                        LESTATUS:='E';
                        LMENSAJE:='La etapa a insertar tiene una fecha fin mayor a la etapa posterior ';
                    END IF;
                END IF;
                CLOSE CUR_ETAPA_JUICIO_POS;

                OPEN CUR_ETAPA_JUICIO_ANT(LETAPA_JUICIO_ELIMINAR.ID_ETAPA_JUICIO);
                FETCH CUR_ETAPA_JUICIO_ANT INTO LETAPA_JUICIO_ANT;
                IF CUR_ETAPA_JUICIO_ANT%FOUND  THEN
                     IF  TRUNC(LETAPA_JUICIO_INSERTAR.FECHA_INICIO)<>TRUNC(LETAPA_JUICIO_ANT.FECHA_TERMINO) THEN
                         LETAPA_JUICIO_INSERTAR.FECHA_INICIO:=LETAPA_JUICIO_ANT.FECHA_TERMINO;
                    END IF;
                END IF;
                CLOSE CUR_ETAPA_JUICIO_ANT;


                if LESTATUS<>'E' then



                    UPDATE operacion.elp_etapa_juicio
                    SET ACTIVO=0
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_ELIMINAR.ID_ETAPA_JUICIO;

                    OPERACION.PKG_ELP_HISTORIAL_ETAPAS.SP_ACCION_ETAPA_JUICIO(LETAPA_JUICIO_ELIMINAR.ID_ETAPA_JUICIO,'BORRADO',SYSDATE,PRESPONSABLE);


                    LFECHA_CALCULADA:=OPERACION.PKG_ELP_CALCULOS.FC_GET_FECHA_INICIO( LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO ,   1);

                    UPDATE operacion.elp_etapa_juicio
                    SET ACTIVO=1,
                    FECHA_INICIO=LETAPA_JUICIO_INSERTAR.FECHA_INICIO,
                    FECHA_INICIO_CALC=LFECHA_CALCULADA,
                    ORDEN=LETAPA_JUICIO_ELIMINAR.ORDEN
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO;

                    LFECHA_CALCULADA:=OPERACION.PKG_ELP_CALCULOS.FC_GET_FECHA_INICIO( LETAPA_JUICIO_POST.ID_ETAPA_JUICIO ,   1);

                    IF LETAPA_JUICIO_INSERTAR.FECHA_TERMINO IS NOT NULL AND LETAPA_JUICIO_INSERTAR.FECHA_TERMINO is not null and  trunc(LETAPA_JUICIO_INSERTAR.FECHA_TERMINO)<>trunc(LETAPA_JUICIO_POST.fecha_inicio) THEN
                        UPDATE operacion.elp_etapa_juicio
                        SET fecha_inicio=LETAPA_JUICIO_INSERTAR.FECHA_TERMINO,
                        FECHA_INICIO_CALC=LFECHA_CALCULADA
                        WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_POST.ID_ETAPA_JUICIO;
                    END IF;

                    OPERACION.PKG_ELP_HISTORIAL_ETAPAS.SP_ACCION_ETAPA(LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO,  'CAPTURA',SYSDATE,PRESPONSABLE);
                end if;

            EXCEPTION
                WHEN OTHERS THEN
                    LESTATUS:='E';
                    LMENSAJE:=LMENSAJE||'Ha ocurrido un error : '||SQLERRM;
            end;

        ELSIF LCLAVE_ACCION ='REEMPLAZA_FECHA_FIN' THEN
            begin

                SELECT ej.*  into LETAPA_JUICIO_ACTUALIZAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_etapa_juicio ej on (pac.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                and  pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;


                if LETAPA_JUICIO_ACTUALIZAR.activo=0 then
                    LESTATUS:='E';
                    LMENSAJE:='La etapa a actualizar ya ha sido eliminada previamente ';
                end if;

                SELECT ej.* into LETAPA_JUICIO_INSERTAR  FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where  cae.clave='REEMPLAZA_FECHA_FIN'
                and   pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;


                OPEN CUR_ETAPA_JUICIO_POS(LETAPA_JUICIO_ACTUALIZAR.ID_ETAPA_JUICIO);
                FETCH CUR_ETAPA_JUICIO_POS INTO LETAPA_JUICIO_POST;
                IF CUR_ETAPA_JUICIO_POS%FOUND  THEN
                    IF LETAPA_JUICIO_INSERTAR.FECHA_TERMINO IS NOT NULL AND  LETAPA_JUICIO_INSERTAR.FECHA_TERMINO>LETAPA_JUICIO_POST.FECHA_TERMINO THEN
                        LESTATUS:='E';
                        LMENSAJE:='La etapa tiene una fecha fin mayor a la etapa posterior ';
                    END IF;
                END IF;
                CLOSE CUR_ETAPA_JUICIO_POS;

                if LESTATUS<>'E' then

                    IF LETAPA_JUICIO_INSERTAR.FECHA_TERMINO IS NOT NULL AND LETAPA_JUICIO_INSERTAR.FECHA_TERMINO is not null and  trunc(LETAPA_JUICIO_INSERTAR.FECHA_TERMINO)<>trunc(LETAPA_JUICIO_POST.fecha_inicio) THEN
                        UPDATE operacion.elp_etapa_juicio
                        SET fecha_inicio=LETAPA_JUICIO_INSERTAR.FECHA_TERMINO
                        WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_POST.ID_ETAPA_JUICIO;
                    END IF;

                    UPDATE operacion.elp_etapa_juicio
                    SET FECHA_TERMINO=LETAPA_JUICIO_INSERTAR.FECHA_TERMINO
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_ACTUALIZAR.ID_ETAPA_JUICIO;

                    update operacion.elp_documento_etapa
                    set ID_ETAPA_JUICIO =LETAPA_JUICIO_ACTUALIZAR.ID_ETAPA_JUICIO,
                    activo=1
                    where ID_ETAPA_JUICIO=LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO;


                    UPDATE operacion.elp_etapa_juicio
                    SET ACTIVO=1,
                    ORDEN=LETAPA_JUICIO_ACTUALIZAR.ORDEN
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO;

                end if;

            EXCEPTION
                WHEN OTHERS THEN
                    LESTATUS:='E';
                    LMENSAJE:=LMENSAJE||'Ha ocurrido un error : '||SQLERRM;
            end;
        ELSIF LCLAVE_ACCION='INSERTA_ETAPA_INTERMEDIA' THEN
           begin

                SELECT ej.*  into LETAPA_JUICIO_ACTUALIZAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_etapa_juicio ej on (pac.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                and  pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

                if LETAPA_JUICIO_ACTUALIZAR.activo=0 then
                    LESTATUS:='E';
                    LMENSAJE:='Se ha realizado un cambio en la estructura de las etapas ';
                end if;
                /*
                SELECT ej.* into LETAPA_JUICIO_FECHA  FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where cae.clave='REEMPLAZA_FECHA_FIN'
                and pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;
                */
                SELECT ej.*  into LETAPA_JUICIO_INSERTAR FROM OPERACION.ELP_PROC_ACC_ETAPA pac
                join operacion.elp_accion_etapa_juicio acj on (pac.ID_PROC_ACC_ETAPA=acj.ID_PROC_ACC_ETAPA)
                join operacion.cat_accion_etapa cae on (acj.id_accion_etapa=cae.id_accion_etapa)
                join operacion.elp_etapa_juicio ej on (acj.ID_ETAPA_JUICIO=ej.ID_ETAPA_JUICIO)
                where  cae.clave='INSERTA_ETAPA_INTERMEDIA'
                and   pac.ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;


                OPEN CUR_ETAPA_JUICIO_POS(LETAPA_JUICIO_ACTUALIZAR.ID_ETAPA_JUICIO);
                FETCH CUR_ETAPA_JUICIO_POS INTO LETAPA_JUICIO_POST;
                IF CUR_ETAPA_JUICIO_POS%FOUND  THEN
                    IF LETAPA_JUICIO_INSERTAR.FECHA_TERMINO IS NOT NULL AND  LETAPA_JUICIO_INSERTAR.FECHA_TERMINO>LETAPA_JUICIO_POST.FECHA_TERMINO THEN
                        LESTATUS:='E';
                        LMENSAJE:=LMENSAJE||'La etapa tiene una fecha fin mayor a la etapa posterior ';
                    END IF;
                END IF;
                CLOSE CUR_ETAPA_JUICIO_POS;

                if LESTATUS<>'E' then
                    UPDATE operacion.elp_etapa_juicio
                    SET ACTIVO=1,
                    ORDEN =LETAPA_JUICIO_ACTUALIZAR.ORDEN,
                    FECHA_INICIO =LETAPA_JUICIO_ACTUALIZAR.FECHA_INICIO,
                    FECHA_INICIO_CALC =LETAPA_JUICIO_ACTUALIZAR.FECHA_INICIO_CALC
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_INSERTAR.ID_ETAPA_JUICIO;

                    BEGIN
                            LCONSECUTIVO:=0;
                            OPEN CUR_ETAPAS_JUICIOS(LETAPA_JUICIO_ACTUALIZAR.ID_JUICIO);
                            FETCH CUR_ETAPAS_JUICIOS INTO LID_ETAPA_JUICIO_AJUSTE;
                            WHILE CUR_ETAPAS_JUICIOS%FOUND  LOOP

                            LCONSECUTIVO:=LCONSECUTIVO+1;
                            --update
                            UPDATE OPERACION.ELP_ETAPA_JUICIO
                            SET  ORDEN=LCONSECUTIVO
                            WHERE  ID_ETAPA_JUICIO=LID_ETAPA_JUICIO_AJUSTE.ID_ETAPA_JUICIO;

                            FETCH CUR_ETAPAS_JUICIOS INTO LID_ETAPA_JUICIO_AJUSTE;
                        END LOOP;
                        CLOSE CUR_ETAPAS_JUICIOS;

                     EXCEPTION
                        WHEN OTHERS THEN
                            NULL;
                    END;

                    IF LETAPA_JUICIO_INSERTAR.FECHA_TERMINO IS NOT NULL AND LETAPA_JUICIO_INSERTAR.FECHA_TERMINO is not null and  trunc(LETAPA_JUICIO_INSERTAR.FECHA_TERMINO)<>trunc(LETAPA_JUICIO_POST.fecha_inicio) THEN

                        LFECHA_CALCULADA:=OPERACION.PKG_ELP_CALCULOS.FC_GET_FECHA_INICIO( LETAPA_JUICIO_POST.ID_ETAPA_JUICIO ,   1);

                        UPDATE OPERACION.ELP_ETAPA_JUICIO
                        SET FECHA_INICIO=LETAPA_JUICIO_INSERTAR.FECHA_TERMINO,
                        FECHA_INICIO_CALC=LFECHA_CALCULADA
                        WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_POST.ID_ETAPA_JUICIO;

                    END IF;

                    /*
                    UPDATE OPERACION.ELP_ETAPA_JUICIO
                    SET FECHA_TERMINO=LETAPA_JUICIO_FECHA.FECHA_TERMINO
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_ACTUALIZAR.ID_ETAPA_JUICIO;
                    */

                    /*
                    UPDATE OPERACION.ELP_DOCUMENTO_ETAPA
                    SET ID_ETAPA_JUICIO =LETAPA_JUICIO_ACTUALIZAR.ID_ETAPA_JUICIO,
                    ACTIVO=1
                    WHERE ID_ETAPA_JUICIO=LETAPA_JUICIO_FECHA.ID_ETAPA_JUICIO;
                    */


                end if;

            EXCEPTION
                WHEN OTHERS THEN
                    LESTATUS:='E';
                    LMENSAJE:=LMENSAJE||'Ha ocurrido un error : '||SQLERRM;
            end;
        ELSE
            LESTATUS:='E';
            LMENSAJE:=LMENSAJE||'Accion desconocida '||LCLAVE_ACCION;
        END IF;

        IF LESTATUS='E' THEN
            raise_application_error(-20000 , 'No se puede aceptar la solicitud:: '||LMENSAJE);
        ELSE
            UPDATE OPERACION.ELP_PROC_ACC_ETAPA
            SET FECHA_RESULTADO=SYSDATE,
            RESULTADO_APROBADO=1,
            USUARIO_RESULTADO=PRESPONSABLE,
            COMENTARIO_RESULTADO=PCOMENTARIO
            WHERE ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;
        END IF;

   END SP_ACEPTAR_SOLICITUD;

   PROCEDURE SP_RECHAZAR_SOLICITUD(PID_PROC_BORRADO_IN in NUMBER, PRESPONSABLE VARCHAR2, PCOMENTARIO VARCHAR2) IS

     BEGIN
        UPDATE OPERACION.ELP_PROC_ACC_ETAPA
            SET FECHA_RESULTADO=SYSDATE,
            RESULTADO_APROBADO=0,
            USUARIO_RESULTADO=PRESPONSABLE,
            COMENTARIO_RESULTADO=PCOMENTARIO
            WHERE ID_PROC_ACC_ETAPA=PID_PROC_BORRADO_IN;

   END SP_RECHAZAR_SOLICITUD;


END PKG_ELP_AUTORIZACION_BORRADO;
/
